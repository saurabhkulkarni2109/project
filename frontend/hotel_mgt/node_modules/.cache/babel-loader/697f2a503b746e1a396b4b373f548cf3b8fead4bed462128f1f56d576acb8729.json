{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Group032\\\\Desktop\\\\project\\\\Git pro\\\\project\\\\frontend\\\\hotel_mgt\\\\src\\\\component\\\\common\\\\RoomTypeSelector.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomTypeSelector = ({\n  handleNewRoomInputChange,\n  newRoom\n}) => {\n  _s();\n  console.log(\"RoomTypeSelector rendered\"); // Log to confirm rendering\n\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [showRoomTypeInput, setShowNewRoomTypesInput] = useState(false);\n  const [newRoomTypes, setNewRoomTypes] = useState(\"\");\n  useEffect(() => {\n    getRoomTypes().then(data => {\n      console.log(\"Room types fetched:\", data);\n      setRoomTypes(data);\n    }).catch(error => {\n      console.error(\"Error fetching room types:\", error);\n    });\n  }, []);\n  const handleNewRoomTypeInputChange = e => {\n    setNewRoomTypes(e.target.value);\n  };\n  const handleAddNewRoomType = () => {\n    if (newRoomTypes !== \"\") {\n      setRoomTypes([...roomTypes, newRoomTypes]);\n      setShowNewRoomTypesInput(false);\n      handleNewRoomInputChange({\n        target: {\n          name: \"roomType\",\n          value: newRoomTypes\n        }\n      });\n    }\n    setNewRoomTypes(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: roomTypes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"roomType\",\n        name: \"roomType\",\n        value: newRoom.roomType,\n        onChange: e => {\n          if (e.target.value === \"Add New\") {\n            setShowNewRoomTypesInput(true);\n          } else {\n            handleNewRoomInputChange(e);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Room type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Add New\",\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), roomTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), showRoomTypeInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Enter a new Room Type\",\n          value: newRoomTypes,\n          onChange: handleNewRoomTypeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-hotel\",\n          type: \"button\",\n          onClick: handleAddNewRoomType,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(RoomTypeSelector, \"c+FP9+cc4OgwuswspTimhpUtw8Y=\");\n_c = RoomTypeSelector;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeSelector\");","map":{"version":3,"names":["RoomTypeSelector","handleNewRoomInputChange","newRoom","_s","console","log","roomTypes","setRoomTypes","useState","showRoomTypeInput","setShowNewRoomTypesInput","newRoomTypes","setNewRoomTypes","useEffect","getRoomTypes","then","data","catch","error","handleNewRoomTypeInputChange","e","target","value","handleAddNewRoomType","name","_jsxDEV","_Fragment","children","length","id","roomType","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","type","index","className","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Group032/Desktop/project/Git pro/project/frontend/hotel_mgt/src/component/common/RoomTypeSelector.jsx"],"sourcesContent":["const RoomTypeSelector = ({ handleNewRoomInputChange, newRoom }) => {\r\n  console.log(\"RoomTypeSelector rendered\"); // Log to confirm rendering\r\n\r\n  const [roomTypes, setRoomTypes] = useState([]);\r\n  const [showRoomTypeInput, setShowNewRoomTypesInput] = useState(false);\r\n  const [newRoomTypes, setNewRoomTypes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getRoomTypes().then((data) => {\r\n      console.log(\"Room types fetched:\", data);\r\n      setRoomTypes(data);\r\n    }).catch(error => {\r\n      console.error(\"Error fetching room types:\", error);\r\n    });\r\n  }, []);\r\n\r\n  const handleNewRoomTypeInputChange = (e) => {\r\n    setNewRoomTypes(e.target.value);\r\n  };\r\n\r\n  const handleAddNewRoomType = () => {\r\n    if (newRoomTypes !== \"\") {\r\n      setRoomTypes([...roomTypes, newRoomTypes]);\r\n      setShowNewRoomTypesInput(false);\r\n      handleNewRoomInputChange({\r\n        target: { name: \"roomType\", value: newRoomTypes },\r\n      });\r\n    }\r\n    setNewRoomTypes(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {roomTypes.length > 0 && (\r\n        <div>\r\n          <select\r\n            id=\"roomType\"\r\n            name=\"roomType\"\r\n            value={newRoom.roomType}\r\n            onChange={(e) => {\r\n              if (e.target.value === \"Add New\") {\r\n                setShowNewRoomTypesInput(true);\r\n              } else {\r\n                handleNewRoomInputChange(e);\r\n              }\r\n            }}\r\n          >\r\n            <option value=\"\">Select a Room type</option>\r\n            <option value=\"Add New\">Add New</option>\r\n            {roomTypes.map((type, index) => (\r\n              <option key={index} value={type}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {showRoomTypeInput && (\r\n            <div className=\"input-group mt-2\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Enter a new Room Type\"\r\n                value={newRoomTypes}\r\n                onChange={handleNewRoomTypeInputChange}\r\n              />\r\n              <button\r\n                className=\"btn btn-hotel\"\r\n                type=\"button\"\r\n                onClick={handleAddNewRoomType}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}