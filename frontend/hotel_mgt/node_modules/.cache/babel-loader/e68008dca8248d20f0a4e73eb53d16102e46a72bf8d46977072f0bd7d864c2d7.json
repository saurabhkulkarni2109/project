{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\saurabh\\\\git\\\\project\\\\project\\\\frontend\\\\hotel_mgt\\\\src\\\\component\\\\rooms\\\\EditRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getRoomById, updateRoom } from '../utils/ApiFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRoom = () => {\n  _s();\n  const [room, setRoom] = useState({\n    photo: null,\n    roomType: \"\",\n    roomPrice: \"\"\n  });\n  const [imgPreview, setImgPreview] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleImageChange = e => {\n    const selectedImage = e.target.files[0];\n    setRoom({\n      ...room,\n      photo: selectedImage\n    });\n    setImgPreview(URL.createObjectURL(selectedImage));\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setRoom({\n      ...room,\n      [name]: value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await updateRoom(roomId, room);\n      if (response.status === 200) {\n        setSuccessMessage(\"Room updated successfully!\");\n        const updatedRoomData = await getRoomById(roomId);\n        setRoom(updatedRoomData);\n        setImgPreview(updatedRoomData.photo);\n        setErrorMessage(\"\");\n      } else {\n        setErrorMessage(\"Error updating room\");\n      }\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"EditRoom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRoom, \"jHTW74kSqg4nHEidxvA54xfCvVM=\");\n_c = EditRoom;\nexport default EditRoom;\nvar _c;\n$RefreshReg$(_c, \"EditRoom\");","map":{"version":3,"names":["React","useState","getRoomById","updateRoom","jsxDEV","_jsxDEV","EditRoom","_s","room","setRoom","photo","roomType","roomPrice","imgPreview","setImgPreview","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleImageChange","e","selectedImage","target","files","URL","createObjectURL","handleInputChange","event","name","value","handleSubmit","preventDefault","response","roomId","status","updatedRoomData","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/saurabh/git/project/project/frontend/hotel_mgt/src/component/rooms/EditRoom.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { getRoomById, updateRoom } from '../utils/ApiFunctions';\r\n\r\nconst EditRoom = () => {\r\n  const [room, setRoom] = useState({\r\n    photo: null,\r\n    roomType: \"\",\r\n    roomPrice: \"\",\r\n  });\r\n\r\n  const [imgPreview, setImgPreview] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleImageChange = (e) => {\r\n    const selectedImage = e.target.files[0];\r\n    setRoom({ ...room, photo: selectedImage });\r\n    setImgPreview(URL.createObjectURL(selectedImage));\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value} = event.target\r\n    setRoom({...room, [name]:value })\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try{\r\n      const response = await updateRoom(roomId,room)\r\n      if(response.status === 200){\r\n        setSuccessMessage(\"Room updated successfully!\")\r\n        const updatedRoomData = await getRoomById(roomId)\r\n        setRoom(updatedRoomData)\r\n        setImgPreview(updatedRoomData.photo)\r\n        setErrorMessage(\"\")\r\n      }else{\r\n        setErrorMessage(\"Error updating room\")\r\n      }\r\n    }catch(error){\r\n      console.error(error)\r\n      setErrorMessage(error.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>EditRoom</div>\r\n  )\r\n}\r\n\r\nexport default EditRoom"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMkB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvCd,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,KAAK,EAAEW;IAAc,CAAC,CAAC;IAC1CP,aAAa,CAACU,GAAG,CAACC,eAAe,CAACJ,aAAa,CAAC,CAAC;EACnD,CAAC;EAED,MAAMK,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACL,MAAM;IACnCb,OAAO,CAAC;MAAC,GAAGD,IAAI;MAAE,CAACoB,IAAI,GAAEC;IAAM,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAM7B,UAAU,CAAC8B,MAAM,EAACzB,IAAI,CAAC;MAC9C,IAAGwB,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAC;QACzBlB,iBAAiB,CAAC,4BAA4B,CAAC;QAC/C,MAAMmB,eAAe,GAAG,MAAMjC,WAAW,CAAC+B,MAAM,CAAC;QACjDxB,OAAO,CAAC0B,eAAe,CAAC;QACxBrB,aAAa,CAACqB,eAAe,CAACzB,KAAK,CAAC;QACpCQ,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAI;QACHA,eAAe,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,QAAMkB,KAAK,EAAC;MACXC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBlB,eAAe,CAACkB,KAAK,CAACE,OAAO,CAAC;IAChC;EACF,CAAC;EAED,oBACEjC,OAAA;IAAAkC,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB,CAAC;AAAApC,EAAA,CA7CKD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AA+Cd,eAAeA,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}