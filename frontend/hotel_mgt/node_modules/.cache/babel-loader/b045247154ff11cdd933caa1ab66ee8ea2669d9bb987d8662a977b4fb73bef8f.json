{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Group032\\\\Desktop\\\\project\\\\frontend\\\\hotel_mgt\\\\src\\\\component\\\\rooms\\\\AddRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getRoomTypes } from '../utils/ApiFunctions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomTypeSelector = ({\n  handleNewRoomInputChange,\n  newRoom\n}) => {\n  _s();\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [showRoomTypeInput, setShowRoomTypeInput] = useState(false);\n  const [newRoomType, setNewRoomType] = useState(\"\");\n  useEffect(() => {\n    getRoomTypes().then(data => {\n      setRoomTypes(data);\n    }).catch(error => {\n      console.error(\"Error fetching room types:\", error); // Added error handling\n    });\n  }, []);\n  const handleNewRoomTypeInputChange = e => {\n    setNewRoomType(e.target.value);\n  };\n  const handleAddNewRoomType = () => {\n    if (newRoomType !== \"\") {\n      setRoomTypes([...roomTypes, newRoomType]);\n      setNewRoomType(\"\");\n      setShowRoomTypeInput(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: roomTypes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"roomType\",\n        name: \"roomType\",\n        value: newRoom.roomType || \"\",\n        onChange: e => {\n          if (e.target.value === \"Add New\") {\n            setShowRoomTypeInput(true);\n          } else {\n            handleNewRoomInputChange(e);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Room type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Add New\",\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), roomTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), showRoomTypeInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Enter a new Room Type\",\n          value: newRoomType,\n          onChange: handleNewRoomTypeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-hotel\",\n          type: \"button\",\n          onClick: handleAddNewRoomType,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(RoomTypeSelector, \"m7cD6N70rdO9mCQqXVwNSDX6A4o=\");\n_c = RoomTypeSelector;\nexport default RoomTypeSelector;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeSelector\");","map":{"version":3,"names":["React","useEffect","useState","getRoomTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomTypeSelector","handleNewRoomInputChange","newRoom","_s","roomTypes","setRoomTypes","showRoomTypeInput","setShowRoomTypeInput","newRoomType","setNewRoomType","then","data","catch","error","console","handleNewRoomTypeInputChange","e","target","value","handleAddNewRoomType","children","length","id","name","roomType","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","type","index","className","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Group032/Desktop/project/frontend/hotel_mgt/src/component/rooms/AddRoom.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getRoomTypes } from '../utils/ApiFunctions';\r\n\r\nconst RoomTypeSelector = ({ handleNewRoomInputChange, newRoom }) => {\r\n    const [roomTypes, setRoomTypes] = useState([]);\r\n    const [showRoomTypeInput, setShowRoomTypeInput] = useState(false);\r\n    const [newRoomType, setNewRoomType] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getRoomTypes().then((data) => {\r\n            setRoomTypes(data);\r\n        }).catch((error) => {\r\n            console.error(\"Error fetching room types:\", error);  // Added error handling\r\n        });\r\n    }, []);\r\n\r\n    const handleNewRoomTypeInputChange = (e) => {\r\n        setNewRoomType(e.target.value);\r\n    };\r\n\r\n    const handleAddNewRoomType = () => {\r\n        if (newRoomType !== \"\") {\r\n            setRoomTypes([...roomTypes, newRoomType]);\r\n            setNewRoomType(\"\");\r\n            setShowRoomTypeInput(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {roomTypes.length > 0 && (\r\n                <div>\r\n                    <select\r\n                        id=\"roomType\"\r\n                        name=\"roomType\"\r\n                        value={newRoom.roomType || \"\"}\r\n                        onChange={(e) => {\r\n                            if (e.target.value === \"Add New\") {\r\n                                setShowRoomTypeInput(true);\r\n                            } else {\r\n                                handleNewRoomInputChange(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <option value=\"\">Select a Room type</option>\r\n                        <option value=\"Add New\">Add New</option>\r\n                        {roomTypes.map((type, index) => (\r\n                            <option key={index} value={type}>{type}</option>\r\n                        ))}\r\n                    </select>\r\n                    {showRoomTypeInput && (\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter a new Room Type\"\r\n                                value={newRoomType}\r\n                                onChange={handleNewRoomTypeInputChange}\r\n                            />\r\n                            <button className='btn btn-hotel' type=\"button\" onClick={handleAddNewRoomType}>\r\n                                Add\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoomTypeSelector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}