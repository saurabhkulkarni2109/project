{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Group032\\\\Desktop\\\\project\\\\frontend\\\\hotel_mgt\\\\src\\\\Pages\\\\login\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create a context for authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = () => setIsAuthenticated(true);\n  const logout = () => setIsAuthenticated(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook for using auth context\n_s(AuthProvider, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Group032/Desktop/project/frontend/hotel_mgt/src/Pages/login/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create a context for authentication\r\nconst AuthContext = createContext();\r\n\r\n// Create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const login = () => setIsAuthenticated(true);\r\n    const logout = () => setIsAuthenticated(false);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook for using auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMU,KAAK,GAAGA,CAAA,KAAMD,kBAAkB,CAAC,IAAI,CAAC;EAC5C,MAAME,MAAM,GAAGA,CAAA,KAAMF,kBAAkB,CAAC,KAAK,CAAC;EAE9C,oBACIN,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,eAAe;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAL,QAAA,EAC3DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAV,EAAA,CAbaF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAczB,OAAO,MAAMc,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACgB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}