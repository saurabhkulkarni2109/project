{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: \"http://localhost:8080\"\n});\nexport async function addRoom(photo, roomType, roomPrice) {\n  const formData = new FormData();\n  formData.append(\"photo\", photo);\n  formData.append(\"roomType\", roomType);\n  formData.append(\"roomPrice\", roomPrice);\n  const response = await api.post(\"/rooms/add/new-room\", formData);\n  if (response.status == 201) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport async function getRoomTypes() {\n  try {\n    const response = await api.get(\"/rooms/room-types\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching room types:\", error.response || error.message);\n    throw new Error(\"Error fetching room types\");\n  }\n}\nexport async function getAllRooms() {\n  try {\n    const result = await api.get(\"/rooms/all-rooms\");\n    return result.data; // Ensure the API response is returned correctly\n  } catch (error) {\n    console.error(\"Error fetching rooms from API:\", error); // Add this for debugging\n    throw new Error(\"Error fetching rooms\");\n  }\n}\nexport async function deleteRoom(roomId) {\n  try {\n    const result = await api.delete(`/rooms/delete/room/${roomId}`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error deleting room ${error.message}`);\n  }\n}\nexport async function updateRoom(roomId, roomData) {\n  const formData = new FormData();\n  formData.append(\"roomType\", roomData.roomType);\n  formData.append(\"roomPrice\", roomData.roomPrice);\n  formData.append(\"photo\", roomData.photo);\n  const response = await api.put(`/rooms/update/${roomId}`);\n  return response;\n}\nexport async function getRoomById(roomId) {\n  try {\n    const result = await api.get(`/rooms/room/${roomId}`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error fetching room ${error.message}`);\n  }\n}","map":{"version":3,"names":["axios","api","create","baseURL","addRoom","photo","roomType","roomPrice","formData","FormData","append","response","post","status","getRoomTypes","get","data","error","console","message","Error","getAllRooms","result","deleteRoom","roomId","delete","updateRoom","roomData","put","getRoomById"],"sources":["C:/Users/dell/OneDrive/Desktop/saurabh/git/project/project/frontend/hotel_mgt/src/component/utils/ApiFunctions.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL :\"http://localhost:8080\"\r\n})\r\n\r\nexport async function addRoom(photo, roomType, roomPrice) {\r\n    const formData = new FormData()\r\n    formData.append(\"photo\", photo)\r\n    formData.append(\"roomType\", roomType)\r\n    formData.append(\"roomPrice\", roomPrice)\r\n\r\n    const response = await api.post(\"/rooms/add/new-room\", formData)\r\n    if(response.status == 201){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function getRoomTypes() {\r\n    try {\r\n        const response = await api.get(\"/rooms/room-types\");\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching room types:\", error.response || error.message);\r\n        throw new Error(\"Error fetching room types\");\r\n    }\r\n}\r\n\r\nexport async function getAllRooms() {\r\n    try {\r\n        const result = await api.get(\"/rooms/all-rooms\");\r\n        return result.data; // Ensure the API response is returned correctly\r\n    } catch (error) {\r\n        console.error(\"Error fetching rooms from API:\", error); // Add this for debugging\r\n        throw new Error(\"Error fetching rooms\");\r\n    }\r\n}\r\n\r\nexport async function deleteRoom(roomId){\r\n    try {\r\n        const result = await api.delete(`/rooms/delete/room/${roomId}`)\r\n        return result.data\r\n    } catch (error) {\r\n        throw new Error(`Error deleting room ${error.message}`)       \r\n    }\r\n}\r\n\r\nexport async function updateRoom(roomId, roomData){\r\n    const formData = new FormData()\r\n    formData.append(\"roomType\", roomData.roomType)\r\n    formData.append(\"roomPrice\", roomData.roomPrice)\r\n    formData.append(\"photo\", roomData.photo)\r\n    const response = await api.put(`/rooms/update/${roomId}`)\r\n    return response\r\n}\r\n\r\nexport async function getRoomById(roomId) {\r\n    try {\r\n        const result = await api.get(`/rooms/room/${roomId}`)\r\n        return result.data\r\n    } catch (error) {\r\n        throw new Error(`Error fetching room ${error.message}`)\r\n    }\r\n    \r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,eAAeC,OAAOA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EACtD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;EAC/BG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;EACrCE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,SAAS,CAAC;EAEvC,MAAMI,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,qBAAqB,EAAEJ,QAAQ,CAAC;EAChE,IAAGG,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAC;IACtB,OAAO,IAAI;EACf,CAAC,MAAI;IACD,OAAO,KAAK;EAChB;AACJ;AAEA,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACjC,IAAI;IACA,MAAMH,QAAQ,GAAG,MAAMV,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOJ,QAAQ,CAACK,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACE,OAAO,CAAC;IAC5E,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAChD;AACJ;AAEA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAChC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMrB,GAAG,CAACc,GAAG,CAAC,kBAAkB,CAAC;IAChD,OAAOO,MAAM,CAACN,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC,CAAC;IACxD,MAAM,IAAIG,KAAK,CAAC,sBAAsB,CAAC;EAC3C;AACJ;AAEA,OAAO,eAAeG,UAAUA,CAACC,MAAM,EAAC;EACpC,IAAI;IACA,MAAMF,MAAM,GAAG,MAAMrB,GAAG,CAACwB,MAAM,CAAC,sBAAsBD,MAAM,EAAE,CAAC;IAC/D,OAAOF,MAAM,CAACN,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,uBAAuBH,KAAK,CAACE,OAAO,EAAE,CAAC;EAC3D;AACJ;AAEA,OAAO,eAAeO,UAAUA,CAACF,MAAM,EAAEG,QAAQ,EAAC;EAC9C,MAAMnB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEiB,QAAQ,CAACrB,QAAQ,CAAC;EAC9CE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEiB,QAAQ,CAACpB,SAAS,CAAC;EAChDC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEiB,QAAQ,CAACtB,KAAK,CAAC;EACxC,MAAMM,QAAQ,GAAG,MAAMV,GAAG,CAAC2B,GAAG,CAAC,iBAAiBJ,MAAM,EAAE,CAAC;EACzD,OAAOb,QAAQ;AACnB;AAEA,OAAO,eAAekB,WAAWA,CAACL,MAAM,EAAE;EACtC,IAAI;IACA,MAAMF,MAAM,GAAG,MAAMrB,GAAG,CAACc,GAAG,CAAC,eAAeS,MAAM,EAAE,CAAC;IACrD,OAAOF,MAAM,CAACN,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,uBAAuBH,KAAK,CAACE,OAAO,EAAE,CAAC;EAC3D;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}