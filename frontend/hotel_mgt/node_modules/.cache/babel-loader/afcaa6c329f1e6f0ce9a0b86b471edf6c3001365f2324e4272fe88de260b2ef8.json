{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Group032\\\\Desktop\\\\project\\\\Git pro\\\\project\\\\frontend\\\\hotel_mgt\\\\src\\\\component\\\\common\\\\RoomTypeSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getRoomTypes } from \"../utils/ApiFunctions\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomTypeSelector = ({\n  handleNewRoomInputChange,\n  newRoom\n}) => {\n  _s();\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [showRoomTypeInput, setShowNewRoomTypesInput] = useState(false);\n  const [newRoomTypes, setNewRoomTypes] = useState(\"\");\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        console.log('Fetching room types...');\n        const data = await getRoomTypes();\n        console.log('Fetched Room Types:', data);\n        if (Array.isArray(data)) {\n          setRoomTypes(data);\n        } else {\n          console.error('Unexpected data format:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching room types:', error);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n  const handleNewRoomTypeInputChange = e => {\n    setNewRoomTypes(e.target.value);\n  };\n  const handleAddNewRoomType = () => {\n    if (newRoomTypes !== \"\") {\n      setRoomTypes([...roomTypes, newRoomTypes]);\n      setShowNewRoomTypesInput(false);\n      handleNewRoomInputChange({\n        target: {\n          name: \"roomType\",\n          value: newRoomTypes\n        }\n      });\n    }\n    setNewRoomTypes(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"roomType\",\n        name: \"roomType\",\n        value: newRoom.roomType,\n        onChange: e => {\n          if (e.target.value === \"Add New\") {\n            setShowNewRoomTypesInput(true);\n          } else {\n            handleNewRoomInputChange(e);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Room type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Add New\",\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), roomTypes.length > 0 && roomTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), showRoomTypeInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Enter a new Room Type\",\n          value: newRoomTypes,\n          onChange: handleNewRoomTypeInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-hotel\",\n          type: \"button\",\n          onClick: handleAddNewRoomType,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RoomTypeSelector, \"c+FP9+cc4OgwuswspTimhpUtw8Y=\");\n_c = RoomTypeSelector;\nexport default RoomTypeSelector;\nvar _c;\n$RefreshReg$(_c, \"RoomTypeSelector\");","map":{"version":3,"names":["React","useEffect","useState","getRoomTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomTypeSelector","handleNewRoomInputChange","newRoom","_s","roomTypes","setRoomTypes","showRoomTypeInput","setShowNewRoomTypesInput","newRoomTypes","setNewRoomTypes","fetchRoomTypes","console","log","data","Array","isArray","error","handleNewRoomTypeInputChange","e","target","value","handleAddNewRoomType","name","children","id","roomType","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","type","index","className","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Group032/Desktop/project/Git pro/project/frontend/hotel_mgt/src/component/common/RoomTypeSelector.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getRoomTypes } from \"../utils/ApiFunctions\";\r\n\r\nconst RoomTypeSelector = ({ handleNewRoomInputChange, newRoom }) => {\r\n  const [roomTypes, setRoomTypes] = useState([]);\r\n  const [showRoomTypeInput, setShowNewRoomTypesInput] = useState(false);\r\n  const [newRoomTypes, setNewRoomTypes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchRoomTypes = async () => {\r\n      try {\r\n        console.log('Fetching room types...');\r\n        const data = await getRoomTypes();\r\n        console.log('Fetched Room Types:', data);\r\n        if (Array.isArray(data)) {\r\n          setRoomTypes(data);\r\n        } else {\r\n          console.error('Unexpected data format:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching room types:', error);\r\n      }\r\n    };\r\n\r\n    fetchRoomTypes();\r\n  }, []);\r\n\r\n  const handleNewRoomTypeInputChange = (e) => {\r\n    setNewRoomTypes(e.target.value);\r\n  };\r\n\r\n  const handleAddNewRoomType = () => {\r\n    if (newRoomTypes !== \"\") {\r\n      setRoomTypes([...roomTypes, newRoomTypes]);\r\n      setShowNewRoomTypesInput(false);\r\n      handleNewRoomInputChange({\r\n        target: { name: \"roomType\", value: newRoomTypes },\r\n      });\r\n    }\r\n    setNewRoomTypes(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <select\r\n          id=\"roomType\"\r\n          name=\"roomType\"\r\n          value={newRoom.roomType}\r\n          onChange={(e) => {\r\n            if (e.target.value === \"Add New\") {\r\n              setShowNewRoomTypesInput(true);\r\n            } else {\r\n              handleNewRoomInputChange(e);\r\n            }\r\n          }}\r\n        >\r\n          <option value={\"\"}>Select a Room type</option>\r\n          <option value={\"Add New\"}>Add New</option>\r\n          {roomTypes.length > 0 && roomTypes.map((type, index) => (\r\n            <option key={index} value={type}>\r\n              {type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {showRoomTypeInput && (\r\n          <div className=\"input-group mt-2\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Enter a new Room Type\"\r\n              value={newRoomTypes}\r\n              onChange={handleNewRoomTypeInputChange}\r\n            />\r\n            <button\r\n              className=\"btn btn-hotel\"\r\n              type=\"button\"\r\n              onClick={handleAddNewRoomType}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoomTypeSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,wBAAwB;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,iBAAiB,EAAEC,wBAAwB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrC,MAAMC,IAAI,GAAG,MAAMlB,YAAY,CAAC,CAAC;QACjCgB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,IAAI,CAAC;QACxC,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UACvBR,YAAY,CAACQ,IAAI,CAAC;QACpB,CAAC,MAAM;UACLF,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEH,IAAI,CAAC;QAChD;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,4BAA4B,GAAIC,CAAC,IAAK;IAC1CT,eAAe,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIb,YAAY,KAAK,EAAE,EAAE;MACvBH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEI,YAAY,CAAC,CAAC;MAC1CD,wBAAwB,CAAC,KAAK,CAAC;MAC/BN,wBAAwB,CAAC;QACvBkB,MAAM,EAAE;UAAEG,IAAI,EAAE,UAAU;UAAEF,KAAK,EAAEZ;QAAa;MAClD,CAAC,CAAC;IACJ;IACAC,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QACE2B,EAAE,EAAC,UAAU;QACbF,IAAI,EAAC,UAAU;QACfF,KAAK,EAAElB,OAAO,CAACuB,QAAS;QACxBC,QAAQ,EAAGR,CAAC,IAAK;UACf,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,KAAK,SAAS,EAAE;YAChCb,wBAAwB,CAAC,IAAI,CAAC;UAChC,CAAC,MAAM;YACLN,wBAAwB,CAACiB,CAAC,CAAC;UAC7B;QACF,CAAE;QAAAK,QAAA,gBAEF1B,OAAA;UAAQuB,KAAK,EAAE,EAAG;UAAAG,QAAA,EAAC;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9CjC,OAAA;UAAQuB,KAAK,EAAE,SAAU;UAAAG,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzC1B,SAAS,CAAC2B,MAAM,GAAG,CAAC,IAAI3B,SAAS,CAAC4B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjDrC,OAAA;UAAoBuB,KAAK,EAAEa,IAAK;UAAAV,QAAA,EAC7BU;QAAI,GADMC,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,EACRxB,iBAAiB,iBAChBT,OAAA;QAAKsC,SAAS,EAAC,kBAAkB;QAAAZ,QAAA,gBAC/B1B,OAAA;UACEsC,SAAS,EAAC,cAAc;UACxBF,IAAI,EAAC,MAAM;UACXG,WAAW,EAAC,uBAAuB;UACnChB,KAAK,EAAEZ,YAAa;UACpBkB,QAAQ,EAAET;QAA6B;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eACFjC,OAAA;UACEsC,SAAS,EAAC,eAAe;UACzBF,IAAI,EAAC,QAAQ;UACbI,OAAO,EAAEhB,oBAAqB;UAAAE,QAAA,EAC/B;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC3B,EAAA,CAnFIH,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AAqFtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}