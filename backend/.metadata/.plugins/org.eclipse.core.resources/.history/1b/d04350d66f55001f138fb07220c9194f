package com.example.services;

import java.math.BigDecimal;
import java.sql.Blob;
import javax.sql.rowset.serial.SerialBlob;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.server.ResponseStatusException;
import com.example.entity.Room;
import com.example.repo.RoomRepo;

@Service
public class RoomService implements IRoomService {
    
    private final RoomRepo roomRepo;
    
    @Autowired
    public RoomService(RoomRepo roomRepo) {
        this.roomRepo = roomRepo;
    }

    @Override
    public Room addNewRoom(MultipartFile file, String roomType, BigDecimal roomPrice) {
        // Validate input
        if (roomType == null || roomType.isEmpty()) {
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Room type is required");
        }
        if (roomPrice == null || roomPrice.compareTo(BigDecimal.ZERO) <= 0) {
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Room price must be positive");
        }
        
        Room room = new Room();
        room.setRoomType(roomType);
        room.setRoomPrice(roomPrice);
        
        if (file != null && !file.isEmpty()) {
            try {
                byte[] photoBytes = file.getBytes();
                Blob photoBlob = new SerialBlob(photoBytes);
                room.setPhoto(photoBlob);
            } catch (Exception e) {
                // Handle exceptions related to file processing
                throw new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, "Error processing file", e);
            }
        }
        
        return roomRepo.save(room);
    }
}
